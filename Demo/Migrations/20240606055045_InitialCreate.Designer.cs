// <auto-generated />
using System;
using Demo;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Demo.Migrations
{
    [DbContext(typeof(DemoDbContext))]
    [Migration("20240606055045_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("CannoliKit.Models.CannoliRoute", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("CallbackMethod")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CallbackType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeferred")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsSynchronous")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Parameter1")
                        .HasColumnType("TEXT");

                    b.Property<string>("Parameter2")
                        .HasColumnType("TEXT");

                    b.Property<string>("Parameter3")
                        .HasColumnType("TEXT");

                    b.Property<string>("StateId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("StateIdToBeDeleted")
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("StateId");

                    b.HasIndex("Id", "Type");

                    b.ToTable("CannoliRoutes");
                });

            modelBuilder.Entity("CannoliKit.Models.CannoliSaveState", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ExpiresOn")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("State")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ExpiresOn");

                    b.ToTable("CannoliSaveStates");
                });

            modelBuilder.Entity("Demo.Models.FoodItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Emoji")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("MealOrderId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MealOrderId");

                    b.ToTable("FoodItems");
                });

            modelBuilder.Entity("Demo.Models.MealOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsFulfilled")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("OrderedOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("MealOrders");
                });

            modelBuilder.Entity("Demo.Models.MealOrderItem", b =>
                {
                    b.Property<int>("MealOrderId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FoodItemId")
                        .HasColumnType("INTEGER");

                    b.HasKey("MealOrderId", "FoodItemId");

                    b.HasIndex("FoodItemId");

                    b.ToTable("MealOrderItems");
                });

            modelBuilder.Entity("CannoliKit.Models.CannoliRoute", b =>
                {
                    b.HasOne("CannoliKit.Models.CannoliSaveState", "CannoliSaveState")
                        .WithMany()
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CannoliSaveState");
                });

            modelBuilder.Entity("Demo.Models.FoodItem", b =>
                {
                    b.HasOne("Demo.Models.MealOrder", null)
                        .WithMany("FoodItems")
                        .HasForeignKey("MealOrderId");
                });

            modelBuilder.Entity("Demo.Models.MealOrderItem", b =>
                {
                    b.HasOne("Demo.Models.FoodItem", "FoodItem")
                        .WithMany()
                        .HasForeignKey("FoodItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Demo.Models.MealOrder", "MealOrder")
                        .WithMany()
                        .HasForeignKey("MealOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FoodItem");

                    b.Navigation("MealOrder");
                });

            modelBuilder.Entity("Demo.Models.MealOrder", b =>
                {
                    b.Navigation("FoodItems");
                });
#pragma warning restore 612, 618
        }
    }
}
